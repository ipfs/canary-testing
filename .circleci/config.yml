---
version: 2.1
orbs:
  win: circleci/windows@2.4.0

workflows:
  version: 2
  test_os:
    jobs:
      - go-install
      - tidy-lint:
          requires:
            - go-install
      - test-linux:
          requires:
            - go-install
      - test-windows
jobs:
  go-install:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run:
          name: "install go 1.14"
          command: |
            ls -A ~/go && echo already downloaded. exiting. && exit 0
            curl -o ~/go.tar.gz https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz
            tar -C ~/ -xzvf ~/go.tar.gz

      - save_cache:
          key: v1-pkg-cache
          paths:
            - ~/go

  tidy-lint:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      GOPATH: "${HOME}/go"
      GOROOT: "${GOPATH}"
      GOBIN: "${GOPATH}/bin"
      BIN: "${GOBIN}:${PATH}"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run:
          name: "make tidy"
          command: make tidy && git diff --exit-code
      - run:
          name: "install linter"
          command: go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.23.6
      - run:
          name: "make lint"
          command: make lint
  test-linux:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      GOPATH: "${HOME}/go"
      GOROOT: "${GOPATH}"
      GOBIN: "${GOPATH}/bin"
      BIN: "${GOBIN}:${PATH}"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run:
          name: "make  build-all"
          command: make build-all
      - run:
          name: "make sidecar"
          command: make docker-sidecar
      - run:
          name: "make test"
          command: |
            mkdir -p $HOME/testground/plans
            ln -s $HOME/project/plans/placebo $HOME/testground/plans/placebo
            go test -v ./...

  # https://circleci.com/docs/2.0/executor-intro/#windows
  test-windows:
    executor: win/default
    steps:
      - checkout
      - run:
          name: "install go 1.14"
          command: |
            $wc = New-Object System.Net.WebClient
            $wc.DownloadFile("https://dl.google.com/go/go1.14.2.windows-amd64.zip", "C:\Users\circleci\go.zip")
            unzip.exe -d C:\Users\circleci C:\Users\circleci\go.zip
      - run:
          name: "test build"
          command: |
            C:\Users\circleci\go\bin\go.exe build ./...
